name: CI Pipeline on Validation 

on:
    pull_request:
        branches:
          - main

jobs:
  test-and-package:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # - name: Waiting for integration test
      #   uses: lewagon/wait-on-check-action@v1.3.1
      #   with: 
      #     ref: ${{ github.ref }}
      #     check-name: 'Run-Integration-test-for-healthz'
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     wait-interval: 10
      #     allowed-conclusions: success

      - name: Create user.csv
        run: |
         touch users.csv
         echo "${{ secrets.USERS_CSV }}" >> users.csv
          
      - name: Build application artifact
        run: zip -r webapp.zip .
        
      - name: Configure Dev AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Initialize packer configuration
        run: |
            cd packer
            packer init appconfig.pkr.hcl
        
      - name: Build AMI with Packer
        run: |
            cd packer 
            AMI_ID=$(packer build appconfig.pkr.hcl | grep -oP 'ami-\w+' | head -n 1)
            echo AMI_ID=${AMI_ID} >> $GITHUB_ENV
        env:
          PKR_VAR_database_name: '${{secrets.DATABASE_NAME}}'
          PKR_VAR_database_password: ${{ secrets.DATABASE_PASSWORD }} 
          PKR_VAR_database_user: ${{ secrets.DATABASE_USER }}
          PKR_VAR_hostname: ${{ secrets.HOSTNAME }} 
          PKR_VAR_aws_region: "${{ secrets.AWS_REGION }}"
          PKR_VAR_source_ami: "${{ secrets.SOURCE_AMI }}"
          PKR_VAR_subnet_id: "${{ secrets.SUBNET_ID }}"

      - name: Configure Demo AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_DEMO }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY_DEMO }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Update Launch Template
        run: |
          aws ec2 create-launch-template-version --launch-template-name "webAppLaunchTemplate" --source-version "\$Default" --launch-template-data "{\"ImageId\":\"${{ env.AMI_ID }}\"}"